backup site com atomo 


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Oi&display=swap" rel="stylesheet">
    
    <title>Responsive 3D Interactive Atom with Heartbeat</title>
    <style>
        #canto-image {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: auto;
            max-width: 200px;
            z-index: 5;
            pointer-events: none;
        }
        #canto-image2 {
            position: fixed;
            top: 0;
            right: 0;
            height: 100vh;
            width: auto;
            max-width: 200px;
            z-index: 5;
            pointer-events: none;
        }
        #canto-image3 {
            display: none; /* Escondido por padrão */
            position: fixed;
            bottom: 0;
            right: 0;
            height: 50vh; /* Metade da altura da tela, igual às outras em mobile */
            width: auto;
            max-width: 200px;
            z-index: 5;
            pointer-events: none;
        }
        #canto-image4 {
            display: none; /* Escondido por padrão */
            position: fixed;
            bottom: 0;
            left: 0;
            height: 50vh; /* Metade da altura da tela, igual às outras em mobile */
            width: auto;
            max-width: 200px;
            z-index: 5;
            pointer-events: none;
        }
        #creation-image {
            position: fixed;
            bottom: 20px;
            right: 70px;
            width: 250px;
            max-height: 2000px;
            z-index: 10;
            opacity: 0;
            transition: opacity 0.5s ease, transform 0.5s ease;
            transform: translateX(100px);
        }
        #creation-image.visible {
            opacity: 1;
            transform: translateX(0);
        }
        #muro-image {
            position: fixed;
            top: 20px;
            left: 300px;
            width: 400px;
            max-height: 2000px;
            z-index: 10;
            opacity: 0;
            transition: opacity 0.5s ease, transform 0.5s ease;
            transform: translateX(100px);
        }
        #muro-image.visible {
            opacity: 1;
            transform: translateX(0);
        }
        .oi-regular {
            font-family: "Oi", serif;
            font-weight: 400;
            font-style: normal;
        }
        body {
            margin: 0;
            background-color: #ffffff;
            overflow-x: hidden;
        }
        canvas#p5canvas {
            display: block;
            max-width: 100%;
            height: auto !important;
            position: fixed;
            top: 0;
            left: 0;
        }
        #controls {
            position: fixed;
            top: 10px;
            left: 10px;
            color: white;
            background: rgba(0, 0, 0, 0.7);
            padding: 10px;
            border-radius: 5px;
            font-size: 14px;
            max-width: 90%;
            box-sizing: border-box;
            z-index: 10;
        }
        .section {
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2em;
            color: #ffffff;
        }
        #section1 { background-color: #ffffff; }
        #section2 { background-color: #ffffff; }
        @media (max-width: 600px) {
            #controls {
                font-size: 12px;
                padding: 5px;
                top: 5px;
                left: 5px;
            }
        }
        #menu {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            padding: 10px;
            background: rgba(255, 255, 255, 0.1);
            color: #000000;
            font-family: 'Roboto', sans-serif;
            font-size: 18px;
            font-weight: 700;
            text-transform: uppercase;
            transition: opacity 0.3s ease;
            z-index: 20;
            box-sizing: border-box;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        #menu.hidden {
            opacity: 0;
            pointer-events: none;
        }
        #menu-left {
            display: flex;
            gap: 20px;
        }
        #menu-right {
            margin-right: 20px;
        }
        #menu a {
            color: #000000;
            text-decoration: none;
            transition: color 0.3s ease;
        }
        #menu a:hover {
            color: #555555;
        }
        #ecg-container {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 300px;
            height: 50px;
            z-index: 15;
        }
        #ecgCanvas {
            width: 100%;
            height: 100%;
        }
        /* Estilos do menu retrátil */
        #hamburger {
            display: none;
            font-size: 24px;
            background: none;
            border: none;
            color: #000000;
            cursor: pointer;
            z-index: 25;
        }
        #mobile-menu {
            display: none;
            position: fixed;
            top: 60px;
            left: 0;
            width: 100%;
            background: rgba(255, 255, 255, 0.9);
            flex-direction: column;
            padding: 10px;
            z-index: 20;
            transition: transform 0.3s ease;
            transform: translateX(-100%);
        }
        #mobile-menu.active {
            display: flex;
            transform: translateX(0);
        }
        #mobile-menu a {
            color: #000000;
            text-decoration: none;
            padding: 10px;
            font-size: 16px;
        }
        #mobile-menu a:hover {
            color: #555555;
        }
        @media (max-width: 600px) {
            #menu {
                padding: 10px;
                justify-content: flex-start;
                height: 60px;
            }
            #menu-left, #menu-right {
                display: none;
            }
            #hamburger {
                display: block;
                margin-left: 10px;
            }
            #ecg-container {
                width: 200px;
                height: 30px;
                left: 50%;
            }
            #canto-image, #canto-image2 {
                height: 50vh;
                max-width: 200px;
            }
            #canto-image3, #canto-image4 {
                display: block; /* Visível apenas em mobile */
            }
            #muro-image {
                width: 200px;
                top: 30px;
                left: 25%;
                transform: translateX(-50%);
            }
            .contact-container {
                padding: 10px;
                max-width: 80%;
                top: 85%;
                transform: translateY(-50%);
            }
            .contact-container.section2 {
                top: 85%;
                left: 20px;
                transform: translateY(-50%);
            }
            .contact-container select,
            .contact-container input {
                font-size: 14px;
                padding: 6px;
            }
            .contact-container button {
                font-size: 14px;
                padding: 6px 12px;
            }
        }
        #header-image {
            position: absolute;
            top: 30%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 50%;
            max-height: 100px;
            object-fit: cover;
            z-index: 5;
            transition: opacity 0.5s ease;
        }
        @media (max-width: 600px) {
            #header-image {
                opacity: 1;
            }
            #header-image.header {
                position: fixed;
                top: 0;
                left: 50%;
                transform: translateX(-50%);
                width: 50%;
                max-height: 100px;
                opacity: 0;
                transition: opacity 0.5s ease;
            }
            #header-image.header.visible {
                opacity: 1;
            }
        }
        .contact-container {
            background: rgba(219, 219, 219, 0.5);
            padding: 15px;
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 300px;
            text-align: center;
            z-index: 15;
            position: fixed;
            top: 50%;
            right: 40px;
            transform: translateY(-50%);
            transition: all 0.5s ease;
        }
        .contact-container.section2 {
            right: auto;
            left: 20px;
            opacity: 1;
        }
        .contact-container.hidden {
            opacity: 0;
            visibility: hidden;
        }
        .contact-container select,
        .contact-container input {
            display: block;
            width: 100%;
            padding: 8px;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            box-sizing: border-box;
            background-color: #fff;
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 10px;
        }
        .contact-container button {
            padding: 8px 16px;
            border: none;
            border-radius: 10px;
            background-color: #ffffff;
            color: #000000;
            font-size: 16px;
            cursor: pointer;
            margin: 5px;
            transition: background-color 0.3s ease;
        }
        .contact-container button:hover {
            background-color: #f0f0f0;
        }
        .contact-container #fixed-contact {
            color: #fff;
            font-size: 16px;
        }
        .contact-container #fixed-contact p {
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <nav id="menu">
        <button id="hamburger">☰</button>
        <div id="ecg-container">
            <canvas id="ecgCanvas" width="300" height="50"></canvas>
        </div>
        <div id="menu-left">
            <a href="/models/tdeste3.html">Início</a>
            <a href="CATALOGO/índice.html">Catálogo</a>
            <a href="#contato">Contato</a>
            <a href="#quem-somos">Quem Somos</a>
        </div>
        <div id="menu-right">
            <a href="#seja-membro">Seja Membro</a>
        </div>
    </nav>
    <div id="mobile-menu">
        <a href="/models/tdeste3.html">Início</a>
        <a href="CATALOGO/índice.html">Catálogo</a>
        <a href="#contato">Contato</a>
        <a href="#quem-somos">Quem Somos</a>
        <a href="#seja-membro">Seja Membro</a>
    </div>

    <img src="images/CANTO.png" alt="Borda Canto Esquerdo Superior" id="canto-image">
    <img src="images/CANTO2.png" alt="Borda Canto Direito Superior" id="canto-image2">
    <img src="images/CANTO3.png" alt="Borda Canto Direito Inferior" id="canto-image3">
    <img src="images/CANTO4.png" alt="Borda Canto Esquerdo Inferior" id="canto-image4">
    
    <img src="images/house.png" alt="Imagem de cabeçalho" id="header-image" onload="console.log('Imagem carregada com sucesso')" onerror="console.log('Erro ao carregar a imagem')">
    
    <div id="section1" class="section">
        <div class="contact-container" id="initial-contact">
            <select id="contact-select">
                <option value="" disabled selected>Escolha seu contato</option>
                <option value="celular">Celular</option>
                <option value="email">E-mail</option>
                <option value="whatsapp">WhatsApp</option>
                <option value="instagram">Instagram</option>
            </select>
        </div>
        <div class="contact-container hidden" id="details-contact">
            <input type="text" id="name-input" placeholder="Digite seu nome">
            <input type="text" id="contact-detail-input" placeholder="Digite seu contato">
            <button id="save-btn">Salvar</button>
            <button id="back-btn">Voltar</button>
            <div id="fixed-contact" class="hidden">
                <p id="fixed-name"></p>
                <p id="fixed-contact-detail"></p>
            </div>
        </div>
    </div>
    <div id="section2" class="section">
        Section 2
        <img src="images/DDG.png" alt="Imagem na Section 2" id="creation-image" onload="console.log('Imagem carregada!')" onerror="console.log('Erro ao carregar imagem')">
        <img src="images/MURO.png" alt="Imagem Muro" id="muro-image" onload="console.log('Imagem carregada!')" onerror="console.log('Erro ao carregar imagem')">
    </div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.2/p5.min.js"></script>
    <script>
        // Código do átomo (p5.js)
        let ringAngle1 = 0, ringAngle2 = 0, ringAngle3 = 0, ringAngle4 = 0;
        let nucleusAngle1 = 0, nucleusAngle2 = 0;
        let electronAngle1 = 0, electronAngle2 = 0, electronAngle3 = 0, electronAngle4 = 0;
        let orbitX = 0, orbitY = window.innerWidth <= 600 ? -window.innerHeight * 0.6 : -window.innerHeight * 0.45;
        let orbitAngle = 0;
        let isPaused = false;
        let ringSpeed = 0.25, electronSpeedFactor = 1;
        let targetOrbitY = orbitY;
        let photons = [];
        let scaleFactor = 1.3;

        function setup() {
            window.onscroll = function() {
                let scrollPos = window.scrollY;
                let maxScroll = document.body.scrollHeight - window.innerHeight;
                let sectionHeight = window.innerHeight;
                let initialContact = document.getElementById('initial-contact');
                let detailsContact = document.getElementById('details-contact');
                let menu = document.getElementById('menu');
                let creationImage = document.getElementById('creation-image');
                let muroImage = document.getElementById('muro-image');
                let headerImage = document.getElementById('header-image');

                // Controle do átomo
                if (window.innerWidth <= 600) {
                    targetOrbitY = map(scrollPos, 0, maxScroll, -window.innerHeight * 0.6, window.innerHeight * 1.0);
                    
                    // Controle da imagem house.png apenas em mobile
                    if (scrollPos >= sectionHeight) {
                        headerImage.classList.add('header');
                        headerImage.classList.add('visible');
                    } else {
                        headerImage.classList.remove('header');
                        headerImage.classList.remove('visible');
                    }
                } else {
                    targetOrbitY = map(scrollPos, 0, maxScroll, -window.innerHeight * 0.45, window.innerHeight * 0.55);
                }

                if (scrollPos > 50) {
                    menu.classList.add('hidden');
                } else {
                    menu.classList.remove('hidden');
                }

                if (scrollPos >= sectionHeight) {
                    creationImage.classList.remove('hidden');
                    creationImage.classList.add('visible');
                    muroImage.classList.remove('hidden');
                    muroImage.classList.add('visible');
                } else {
                    creationImage.classList.remove('visible');
                    creationImage.classList.add('hidden');
                    muroImage.classList.remove('visible');
                    muroImage.classList.add('hidden');
                }
            }
            let canvasWidth = window.innerWidth * 0.9;
            let canvasHeight = window.innerHeight * 2;
            let canvas = createCanvas(canvasWidth, canvasHeight, WEBGL);
            canvas.id('p5canvas');
            angleMode(DEGREES);
            frameRate(60);
            ambientLight(150);
            directionalLight(255, 255, 255, 0, 0, -1);
            canvas.style.position = 'fixed';
        }

        function draw() {
            background(255, 255, 255, 0);
            drawBackgroundDetails();

            let maxOrbit = min(width, height) * 0.05;
            orbitAngle += 0.5;
            orbitX = maxOrbit * cos(orbitAngle);
            orbitY = lerp(orbitY, targetOrbitY, 0.15);
            translate(orbitX, orbitY);

            if (!isPaused) {
                nucleusAngle1 += ringSpeed;
                nucleusAngle2 += ringSpeed;
                ringAngle1 += ringSpeed;
                ringAngle2 += ringSpeed;
                ringAngle3 += ringSpeed;
                ringAngle4 += ringSpeed;
                electronAngle1 += (90 / 60) * electronSpeedFactor;
                electronAngle2 -= (90 / 60) * electronSpeedFactor;
                electronAngle3 += (120 / 60) * electronSpeedFactor;
                electronAngle4 += (120 / 60) * electronSpeedFactor;
            }

            drawNucleus(nucleusAngle1, 0);
            drawNucleus(nucleusAngle2, 60);
            let ringScale = window.innerWidth <= 600 ? 2.0 : 1.0;
            let baseRadius = min(width, height) * 0.03 * scaleFactor * ringScale;
            let outerRadius = min(width, height) * 0.045 * scaleFactor * ringScale;
            drawRing(ringAngle1, -30, baseRadius, electronAngle1, electronSpeedFactor, 1.2, 0.8);
            drawRing(ringAngle2, 60, baseRadius, electronAngle2, -electronSpeedFactor, 1.3, 0.7);
            drawRing(ringAngle3, 0, outerRadius, electronAngle3, electronSpeedFactor, 1.5, 0.6);
            drawRing(ringAngle4, 90, outerRadius, electronAngle4, electronSpeedFactor, 1.1, 0.9);

            updateAndDrawPhotons();
            addDynamicLighting();
        }

        function drawBackgroundDetails() {
            push();
            translate(-width / 2, -height / 2);
            noStroke();
            fill(240, 240, 240, 30);
            for (let i = 0; i < 5; i++) {
                let x = random(width);
                let y = random(height);
                let size = random(10, 30);
                ellipse(x, y, size, size);
            }
            pop();
        }

        function drawNucleus(angle, tilt) {
            push();
            rotateY(angle);
            rotateX(tilt);
            noStroke();
            fill(255, 0, 0);
            ambientMaterial(255, 0, 0);
            sphere(8 * scaleFactor);
            pop();
        }

        function drawRing(angle, tilt, radius, electronAngle, speedFactor, aFactor = 1, bFactor = 1) {
            push();
            rotateY(angle);
            rotateX(tilt);

            let a = radius * aFactor;
            let b = radius * bFactor;

            for (let i = 0; i < 360; i += 10) {
                let x = a * cos(i);
                let z = b * sin(i);
                let y = -5 * z / radius;
                push();
                translate(x, y, z);
                fill(0, 0, 255, 150);
                noStroke();
                sphere(1 * scaleFactor);
                pop();
            }

            let electronX = a * cos(electronAngle);
            let electronZ = b * sin(electronAngle);
            let electronY = -5 * electronZ / radius;
            push();
            translate(electronX, electronY, electronZ);
            fill(0, 255, 0);
            ambientMaterial(0, 255, 0);
            sphere(2 * scaleFactor);

            let glowIntensity = 150 + 100 * sin(frameCount * speedFactor);
            pointLight(0, 255, 0, electronX, electronY, electronZ, glowIntensity);

            if (!isPaused && random() < 0.05) {
                photons.push({
                    x: electronX,
                    y: electronY,
                    z: electronZ,
                    vx: random(-1, 1),
                    vy: random(-1, 1),
                    vz: random(-1, 1),
                    life: 60
                });
            }
            pop();
            pop();
        }

        function updateAndDrawPhotons() {
            for (let i = photons.length - 1; i >= 0; i--) {
                let p = photons[i];
                p.x += p.vx;
                p.y += p.vy;
                p.z += p.vz;
                p.life--;

                push();
                translate(p.x, p.y, p.z);
                fill(255, 255, 0, map(p.life, 0, 60, 0, 255));
                noStroke();
                sphere(0.5);
                pop();

                if (p.life <= 0) {
                    photons.splice(i, 1);
                }
            }
        }

        function mousePressed() {
            isPaused = !isPaused;
            updateStatus();
        }

        function mouseDragged() {
            ringSpeed = map(mouseX, 0, width, 0.1, 0.5);
            electronSpeedFactor = map(mouseY, 0, height, 0.5, 2);
        }

        function keyPressed() {
            if (key === 'P' || key === 'p') {
                isPaused = !isPaused;
                updateStatus();
            } else if (key === 'R' || key === 'r') {
                ringSpeed = 0.25;
                electronSpeedFactor = 1;
            }
        }

        function updateStatus() {
            document.getElementById('status') && (document.getElementById('status').textContent = isPaused ? 'Paused' : 'Running');
        }

        function addDynamicLighting() {
            push();
            let time = frameCount * 0.1;
            pointLight(255, 255, 0, 100 * cos(time), 100 * sin(time), -50);
            pop();
        }

        function windowResized() {
            let canvasWidth = window.innerWidth * 0.9;
            let canvasHeight = window.innerHeight * 2;
            resizeCanvas(canvasWidth, canvasHeight);
            orbitY = window.innerWidth <= 600 ? -window.innerHeight * 0.6 : -window.innerHeight * 0.45;
            targetOrbitY = orbitY;
        }

        // Código do batimento cardíaco
        const ecgCanvas = document.getElementById('ecgCanvas');
        const ctx = ecgCanvas.getContext('2d');
        const ecgWidth = ecgCanvas.width;
        const ecgHeight = ecgCanvas.height;
        let ecgPoints = [];
        let ecgTime = 0;
        const ecgSpeed = 2;
        const ecgAmplitude = 15;
        const ecgMaxPoints = 150;

        function getHeartbeatY(x) {
            const beat = Math.sin(x * 0.1) * Math.cos(x * 0.05);
            const spike = Math.sin(x * 0.5) > 0.9 ? 1.5 : 1;
            return (ecgHeight / 2) - (beat * ecgAmplitude * spike);
        }

        function initializeEcgPoints() {
            ecgPoints = [];
            for (let x = 0; x <= ecgWidth; x += ecgSpeed) {
                ecgPoints.push({
                    x: x,
                    y: getHeartbeatY(x)
                });
            }
        }

        function drawSmoothEcgLine() {
            ctx.clearRect(0, 0, ecgWidth, ecgHeight);
            ctx.beginPath();
            ctx.strokeStyle = '#000';
            ctx.lineWidth = 1;
            ctx.lineJoin = 'round';

            if (ecgPoints.length > 2) {
                ctx.moveTo(ecgPoints[0].x, ecgPoints[0].y);

                for (let i = 1; i < ecgPoints.length - 1; i++) {
                    const xc = (ecgPoints[i].x + ecgPoints[i + 1].x) / 2;
                    const yc = (ecgPoints[i].y + ecgPoints[i + 1].y) / 2;
                    ctx.quadraticCurveTo(ecgPoints[i].x, ecgPoints[i].y, xc, yc);

                    const opacity = i / (ecgPoints.length - 1);
                    ctx.strokeStyle = `rgba(0, 0, 0, ${opacity})`;
                    ctx.stroke();
                    ctx.beginPath();
                    ctx.moveTo(xc, yc);
                }

                ctx.lineTo(ecgPoints[ecgPoints.length - 1].x, ecgPoints[ecgPoints.length - 1].y);
                ctx.strokeStyle = 'rgba(0, 0, 0, 0)';
                ctx.stroke();
            }
        }

        function animateEcg() {
            for (let i = 0; i < ecgPoints.length; i++) {
                ecgPoints[i].x -= ecgSpeed;
            }

            if (ecgPoints[0].x < -ecgSpeed) {
                ecgPoints.shift();
                ecgTime += ecgSpeed;
                ecgPoints.push({
                    x: ecgWidth,
                    y: getHeartbeatY(ecgTime)
                });
            }

            drawSmoothEcgLine();
            requestAnimationFrame(animateEcg);
        }

        initializeEcgPoints();
        animateEcg();

        // Eventos do formulário de contato
        document.getElementById('contact-select').addEventListener('change', function() {
            let selectedValue = this.value;
            let initialContact = document.getElementById('initial-contact');
            let detailsContact = document.getElementById('details-contact');
            let contactDetailInput = document.getElementById('contact-detail-input');

            if (selectedValue) {
                initialContact.classList.add('hidden');
                detailsContact.classList.remove('hidden');
                detailsContact.classList.remove('fixed');
                document.getElementById('fixed-contact').classList.add('hidden');
                document.getElementById('name-input').style.display = 'block';
                document.getElementById('contact-detail-input').style.display = 'block';
                document.getElementById('save-btn').style.display = 'inline-block';
                document.getElementById('back-btn').style.display = 'inline-block';
                switch (selectedValue) {
                    case 'celular':
                        contactDetailInput.placeholder = 'Digite seu número de celular';
                        break;
                    case 'email':
                        contactDetailInput.placeholder = 'Digite seu e-mail';
                        break;
                    case 'whatsapp':
                        contactDetailInput.placeholder = 'Digite seu número de WhatsApp';
                        break;
                    case 'instagram':
                        contactDetailInput.placeholder = 'Digite seu @Instagram';
                        break;
                }
            }
        });

        document.getElementById('save-btn').addEventListener('click', function() {
            let name = document.getElementById('name-input').value;
            let contactDetail = document.getElementById('contact-detail-input').value;
            let detailsContact = document.getElementById('details-contact');

            if (name && contactDetail) {
                console.log('Nome:', name, 'Contato:', contactDetail);
                document.getElementById('name-input').style.display = 'none';
                document.getElementById('contact-detail-input').style.display = 'none';
                document.getElementById('save-btn').style.display = 'none';
                document.getElementById('back-btn').style.display = 'none';
                let fixedName = document.getElementById('fixed-name');
                let fixedContactDetail = document.getElementById('fixed-contact-detail');
                fixedName.textContent = 'Nome: ' + name;
                fixedContactDetail.textContent = 'Contato: ' + contactDetail;
                document.getElementById('fixed-contact').classList.remove('hidden');
                detailsContact.classList.add('fixed');
            } else {
                alert('Por favor, preencha ambos os campos.');
            }
        });

        document.getElementById('back-btn').addEventListener('click', function() {
            let initialContact = document.getElementById('initial-contact');
            let detailsContact = document.getElementById('details-contact');
            initialContact.classList.remove('hidden');
            detailsContact.classList.add('hidden');
            document.getElementById('contact-select').value = '';
        });

        // Lógica do menu retrátil
        document.getElementById('hamburger').addEventListener('click', function() {
            let mobileMenu = document.getElementById('mobile-menu');
            mobileMenu.classList.toggle('active');
        });
    </script>
</body>
</html>